import org.apache.tools.ant.filters.ReplaceTokens

//Plugins
plugins {

    id 'java'

    id 'application'

    id 'com.github.johnrengelman.shadow' version '1.2.4'

    id 'com.sedmelluq.jdaction' version '1.0.2'
}

compileJava.options.encoding = 'UTF-8'
mainClassName = "btl.bot.BtlMain"


def ver = new Version(major: 1, minor: 2, revision: 0)
version ver.toString()


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
    mavenLocal()

}

dependencies {
    compile 'com.google.guava:guava:19.0'
    compile 'com.fathzer:javaluator:3.0.1'
    compile 'com.google.guava:guava:19.0'
    compile 'com.fathzer:javaluator:3.0.1'
    compile 'com.google.apis:google-api-services-youtube:v3-rev174-1.22.0'
    compile group: 'com.github.shredder121.fork', name: 'com.sedmelluq.jda-nas', version: '1.0.8-rythm'
    compile 'net.dv8tion:JDA:3.5.1_346'
    compile 'com.sedmelluq:lavaplayer:1.2.49'
    compile 'com.sedmelluq:jda-nas:1.0.5'
    compile 'com.jagrosh:JDA-Utilities:1.9'
    compile 'org.reflections:reflections:0.9.10'
    compile 'ch.qos.logback:logback-classic:0.9.26'
    compile 'net.jodah:expiringmap:0.5.8'
    compile 'org.apache-extras.beanshell:bsh:2.0b6'
    compile 'fr.bmartel:jspeedtest:1.30.1'
    compile 'com.jcabi:jcabi-github:0.32'
    compile 'us.monoid.web:resty:0.3.2'
    compile 'org.jsoup:jsoup:1.10.3'
    compile 'br.com.brjdevs:utils:1.0.0_15'
    compile 'br.com.brjdevs:network:1.0.0_2'
    compile 'br.com.brjdevs:trove-utils:1.0.0_4'
    compile 'br.com.brjdevs:snowflakes:1.0.0_1'
    compile 'com.google.guava:guava:22.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.0.pr1'
    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:1.5.3.RELEASE'
    compile 'com.rethinkdb:rethinkdb-driver:2.3.3'
    compile 'com.fathzer:javaluator:3.0.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.0.pr1'
    compile 'com.rabbitmq:amqp-client:4.1.1'
    compile 'io.sentry:sentry:1.2.0'
    compile 'com.github.rithms:riot-api-java:4.0.1'
    compile 'com.mashape.unirest:unirest-java:1.3.1'
    compile 'com.sparkjava:spark-core:2.5.4'
    compileOnly "org.projectlombok:lombok:1.16.16"
    compile('se.michaelthelin.spotify:spotify-web-api-java:1.5.0') {
        exclude group: "commons-beanutils", module: "commons-beanutils"

    }
    compile 'commons-beanutils:commons-beanutils:20030211.134440'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}


task clearPrepared(type: Delete) {
    delete 'build/prepared-src'
}

//Task for the versioning system
task prepareSource(type: Copy) {
    from 'src/main/java'
    into 'build/prepared-src'
    filter(ReplaceTokens, tokens: [
            version: ver.toString()
    ])
}

prepareSource.dependsOn clearPrepared

compileJava {
    source = prepareSource.destinationDir
    classpath = sourceSets.main.compileClasspath
    options.encoding = 'UTF-8'
    dependsOn prepareSource
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

build.dependsOn shadowJar

artifacts {
    archives shadowJar
}

task cleanDistTar(type: Delete) { delete files(distTar) }
distTar { classifier = "trash" }
distTar.finalizedBy cleanDistTar

task cleanDistZip(type: Delete) { delete files(distZip) }
distZip { classifier = "trash" }
distZip.finalizedBy cleanDistZip

task cleanShittyJar(type: Delete) { delete files(jar) }
jar { classifier = "trash" }
jar.finalizedBy cleanShittyJar

shadowJar { classifier = "" }

class Version {
    String major, minor, revision

    static String getBuild() {
        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?: ""
    }

    String toString() {
        "${major}.${minor}.${revision}$build~Dev"
    }
}